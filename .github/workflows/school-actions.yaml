name: Django DRF with Apache Solr and PostgreSQL CI
'on':
  push:
    branches:
      - feat/github-workflow-setup
  pull_request:
    branches:
      - main
env:
  DJANGO_SETTINGS_MODULE: "school.test_settings"
  ACTOR: ${{ vars.ACTOR }}

jobs:
  job1:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: 'postgres:14'
        env:
          POSTGRES_DB: test_electo_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - '5432:5432'
        options:
          --name ct-postgres
          --health-cmd "pg_isready -U postgres" --health-interval 10s
          --health-timeout 5s --health-retries 5
      solr:
        image: 'solr:8.9.0'
        ports:
          - '8983:8983'
        options: '--name ct-solr -e SOLR_HEAP=512m'
        env:
          SOLR_JAVA_MEM: '-Xms512m -Xmx512m'
    steps:
      - name: Print settings module
        run: |
          echo "Project Owner Variable: ${{ vars.PROJECT_OWNER }}"
          echo "Actor glob variable name: ${{ vars.ACTOR }}"
          echo "Actor ENV variable name: ${{ env.ACTOR }}"
          echo "Country repo secret variable name: ${{ secrets.COUNTRY }}"
          docker ps -a
          docker image ls

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Set up Apache Solr
        env:
          SOLR_CORE_NAME: "test_electo_core" # Solr Core Name
        run: |
          docker exec ct-solr solr create -c ${SOLR_CORE_NAME}  -d sample_techproducts_configs
          echo "Solr core named: ${SOLR_CORE_NAME} successfully created."   
          curl "http://localhost:8983/solr/admin/cores?core=${SOLR_CORE_NAME}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: Set up the Django project
        run: |
          python manage.py migrate

      - name: Run tests
        run: |
          python manage.py test
